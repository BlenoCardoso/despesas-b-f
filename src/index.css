@tailwind base;
@tailwind components;
@tailwind utilities;

/* Tipografia Fluida - Sistema de escala responsiva */
:root {
  /* Viewport breakpoints para cálculo fluido */
  --viewport-min: 320px;
  --viewport-max: 1280px;
}

/* Reset base com fluidez */
html {
  /* Font size base fluida mais refinada: 14px em mobile, 16px em desktop */
  font-size: clamp(14px, 1.7vw, 16px);
}

body {
  /* Texto base legível em todas as telas */
  font-size: clamp(14px, 2.5vw, 16px);
  line-height: 1.5;
  
  /* Melhorias de performance e UX */
  overscroll-behavior-y: contain; /* Evita bounce chato */
  -webkit-tap-highlight-color: transparent; /* Remove flash azul no iOS */
}

/* Hierarquia de títulos fluida */
h1, .text-2xl {
  /* Títulos principais: 20px mobile → 32px desktop */
  font-size: clamp(20px, 5vw, 32px);
  line-height: 1.2;
  font-weight: 700;
}

h2, .text-xl {
  /* Subtítulos: 18px mobile → 24px desktop */
  font-size: clamp(18px, 4vw, 24px);
  line-height: 1.3;
  font-weight: 600;
}

h3, .text-lg {
  /* Títulos refinados: 16px mobile → 20px desktop */
  font-size: clamp(16px, 2.5vw, 20px);
  line-height: 1.4;
  font-weight: 500;
}

/* Texto de conteúdo otimizado */
p, .text-base, div {
  /* Parágrafos: 14px mobile → 16px desktop */
  font-size: clamp(14px, 2.5vw, 16px);
  line-height: 1.5;
}

/* Valores monetários com destaque proporcional */
.monetary-value, .text-money {
  /* Valores R$: 18px mobile → 28px desktop */
  font-size: clamp(18px, 4.5vw, 28px);
  font-weight: 700;
  line-height: 1.2;
}

.monetary-large {
  /* Totais principais: 24px mobile → 36px desktop */
  font-size: clamp(24px, 6vw, 36px);
  font-weight: 800;
  line-height: 1.1;
}

.monetary-small {
  /* Valores secundários: 14px mobile → 18px desktop */
  font-size: clamp(14px, 3vw, 18px);
  font-weight: 600;
  line-height: 1.3;
}

/* Textos secundários legíveis */
.text-sm, small {
  /* Labels e auxiliares: 12px mobile → 14px desktop */
  font-size: clamp(12px, 2vw, 14px);
  line-height: 1.4;
}

.text-xs {
  /* Micro textos: 11px mobile → 12px desktop */
  font-size: clamp(11px, 1.8vw, 12px);
  line-height: 1.3;
}

/* Datas e timestamps */
.date-text {
  /* Datas: 13px mobile → 15px desktop */
  font-size: clamp(13px, 2.2vw, 15px);
  font-weight: 500;
  line-height: 1.4;
}

/* Botões com texto proporcional */
button, .btn {
  /* Botões: 14px mobile → 16px desktop */
  font-size: clamp(14px, 2.5vw, 16px);
  font-weight: 500;
  line-height: 1.2;
}

.btn-large {
  /* Botões grandes: 16px mobile → 18px desktop */
  font-size: clamp(16px, 3vw, 18px);
  font-weight: 600;
}

/* Inputs e forms */
input, textarea, select {
  /* Campos de entrada: 14px mobile → 16px desktop */
  font-size: clamp(14px, 2.5vw, 16px);
  line-height: 1.4;
}

/* Badges e chips */
.badge, .chip {
  /* Etiquetas: 11px mobile → 13px desktop */
  font-size: clamp(11px, 2vw, 13px);
  font-weight: 500;
  line-height: 1.2;
}

/* Estados especiais para telas muito pequenas */
@media (max-width: 360px) {
  .monetary-large {
    /* Em telas muito pequenas, limitar o máximo */
    font-size: clamp(20px, 5.5vw, 24px);
  }
  
  h1, .text-2xl {
    font-size: clamp(18px, 4.5vw, 20px);
  }
}

/* Otimizações para telas grandes */
@media (min-width: 1024px) {
  .monetary-large {
    /* Em desktop, permitir mais destaque */
    font-size: clamp(28px, 3vw, 40px);
  }
}

/* Utilities extras para casos específicos */
.text-fluid-xs { font-size: clamp(10px, 1.5vw, 11px); }
.text-fluid-sm { font-size: clamp(12px, 2vw, 14px); }
.text-fluid-base { font-size: clamp(14px, 2.5vw, 16px); }
.text-fluid-lg { font-size: clamp(16px, 3.5vw, 20px); }
.text-fluid-xl { font-size: clamp(18px, 4vw, 24px); }
.text-fluid-2xl { font-size: clamp(20px, 5vw, 32px); }
.text-fluid-3xl { font-size: clamp(24px, 6vw, 36px); }

/* Badge/Chip variants customizadas para orçamento */
.badge-success {
  background-color: rgb(220 252 231); /* green-100 */
  color: rgb(22 101 52); /* green-800 */
  border: 1px solid rgb(134 239 172); /* green-300 */
}

.badge-warning {
  background-color: rgb(254 249 195); /* yellow-100 */
  color: rgb(133 77 14); /* yellow-800 */
  border: 1px solid rgb(253 224 71); /* yellow-300 */
}

.badge-error {
  background-color: rgb(254 226 226); /* red-100 */
  color: rgb(153 27 27); /* red-800 */
  border: 1px solid rgb(252 165 165); /* red-300 */
}

/* Sistema de Container Central Otimizado */
.container-central {
  /* Container otimizado para legibilidade - evita linhas compridas */
  max-width: 640px; /* max-w-screen-sm - 640px */
  margin: 0 auto;
  padding-left: 12px; /* px-3 */
  padding-right: 12px; /* px-3 */
  width: 100%;
}

/* Container central inline para casos específicos */
.container-inline {
  /* Equivale a: mx-auto max-w-screen-sm px-3 */
  margin-left: auto;
  margin-right: auto;
  max-width: 640px;
  padding-left: 12px;
  padding-right: 12px;
}

/* Aliaser mais semântico para uso em componentes que focam leitura */
.readable {
  max-width: 640px; /* Limita a largura para melhorar legibilidade */
  margin-left: auto;
  margin-right: auto;
  padding-left: 12px; /* px-3 */
  padding-right: 12px; /* px-3 */
  width: 100%;
}

/* Espaçamentos verticais consistentes */
.space-consistent {
  /* Espaçamento vertical uniforme */
  > * + * {
    margin-top: 16px; /* space-y-4 */
  }
}

.space-consistent-sm {
  /* Espaçamento menor para elementos compactos */
  > * + * {
    margin-top: 12px; /* space-y-3 */
  }
}

.space-consistent-lg {
  /* Espaçamento maior para seções importantes */
  > * + * {
    margin-top: 24px; /* space-y-6 */
  }
}

/* Padding interno consistente */
.padding-consistent {
  padding: 16px 12px; /* py-4 px-3 */
}

.padding-consistent-sm {
  padding: 12px; /* p-3 */
}

.padding-consistent-lg {
  padding: 24px 12px; /* py-6 px-3 */
}

/* Sistema de gap consistente para flex/grid */
.gap-consistent {
  gap: 12px; /* gap-3 */
}

.gap-consistent-sm {
  gap: 8px; /* gap-2 */
}

.gap-consistent-lg {
  gap: 16px; /* gap-4 */
}

/* ========================================
   ALVOS DE TOQUE ACESSÍVEIS (44px+)
   ======================================== */

/* Alvos de toque mínimos para acessibilidade (44px+ recomendado WCAG) */
.touch-target {
  min-height: 44px;
  min-width: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.touch-target-button {
  min-height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 12px 16px;
}

.touch-target-small {
  min-height: 36px;
  min-width: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Botões com altura mínima para conforto */
.btn-touch-safe {
  min-height: 44px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 12px 16px;
}

.btn-touch-safe-sm {
  min-height: 36px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 8px 12px;
}

/* Classes para botões existentes */
.button-primary-touch {
  min-height: 48px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 12px 24px;
  font-size: 16px;
  font-weight: 500;
}

.button-secondary-touch {
  min-height: 44px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 12px 16px;
  font-size: 14px;
  font-weight: 500;
}

.button-icon-touch {
  min-height: 44px;
  min-width: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
}

/* ========================================
   MELHORIAS DE ACESSIBILIDADE
   ======================================== */

/* Contraste aprimorado para textos em fundos escuros */
.text-accessible-light {
  color: rgba(255, 255, 255, 0.95); /* Contraste 4.5:1 mínimo */
}

.text-accessible-muted {
  color: rgba(255, 255, 255, 0.8); /* Para textos secundários */
}

/* Estados de foco visíveis */
.focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Skeleton loading states */
.skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, transparent 37%, #f0f0f0 63%);
  background-size: 400% 100%;
  animation: skeleton-loading 1.4s ease-in-out infinite;
}

@keyframes skeleton-loading {
  0% {
    background-position: 100% 50%;
  }
  100% {
    background-position: -100% 50%;
  }
}

.skeleton-dark {
  background: linear-gradient(90deg, #374151 25%, transparent 37%, #374151 63%);
  background-size: 400% 100%;
  animation: skeleton-loading 1.4s ease-in-out infinite;
}

/* ========================================
   SAFE AREA INSETS (iOS/Android notch)
   ======================================== */

/* Classes utilitárias para safe area */
.safe-top {
  padding-top: max(env(safe-area-inset-top), 12px);    /* 12px de respiro mínimo */
}

.safe-bottom {
  padding-bottom: max(env(safe-area-inset-bottom), 16px);
}

.safe-left {
  padding-left: max(env(safe-area-inset-left), 12px);
}

.safe-right {
  padding-right: max(env(safe-area-inset-right), 12px);
}

/* Suporte para iOS antigo */
@supports (padding-top: constant(safe-area-inset-top)) {
  .safe-top { 
    padding-top: max(constant(safe-area-inset-top), 12px); 
  }
  .safe-bottom { 
    padding-bottom: max(constant(safe-area-inset-bottom), 16px); 
  }
  .safe-left { 
    padding-left: max(constant(safe-area-inset-left), 12px); 
  }
  .safe-right { 
    padding-right: max(constant(safe-area-inset-right), 12px); 
  }
}

/* Ensure sticky/fixed elements that use .safe-top are offset by the safe area
   so they do not overlap the status bar. This targets common positioning values
   and provides fallbacks for older iOS. */
:where(.safe-top).sticky, :where(.safe-top).fixed, .safe-top[data-sticky="true"] {
  top: env(safe-area-inset-top, 0px);
}

@supports (padding-top: constant(safe-area-inset-top)) {
  :where(.safe-top).sticky, :where(.safe-top).fixed, .safe-top[data-sticky="true"] {
    top: constant(safe-area-inset-top);
  }
}

/* ========================================
   APP BAR (Header) SIZING & LAYOUT
   Ensures a consistent content height (52-56px) while
   including the device safe-area inset in the overall header height.
   The variable --appbar-content-height controls the visible appbar
   (recommended 56px). The header will add the safe-area inset on top
   so the content area stays consistent across devices with/without notch.
   ======================================== */

:root {
  --appbar-content-height: 56px; /* visible content height (52 - 56px allowed) */
  --appbar-min-content-height: 52px;
  --appbar-max-content-height: 56px;
}

.appbar {
  /* Add the safe area inset to the overall header height so the content
     region remains the same size. Falls back to 0 when env() is not supported. */
  --safe-top: env(safe-area-inset-top);
  padding-top: var(--safe-top, 0px);
  /* Offset the element when sticky/fixed so it never overlaps the status bar */
  top: var(--safe-top, 0px);
  height: calc(var(--appbar-content-height) + var(--safe-top, 0px));
  min-height: calc(var(--appbar-min-content-height) + var(--safe-top, 0px));
  max-height: calc(var(--appbar-max-content-height) + var(--safe-top, 0px));

  display: block; /* header element will contain an inner flex row */
}

/* Inner container that holds the interactive content and keeps a fixed
   content height regardless of the safe-area inset. Use this to vertically
   center items and avoid the padding affecting internal alignment. */
.appbar-inner {
  height: var(--appbar-content-height);
  min-height: var(--appbar-min-content-height);
  max-height: var(--appbar-max-content-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* Title styling: compact line-height and no wrapping */
.appbar-title {
  line-height: 1; /* compact */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@supports (padding-top: constant(safe-area-inset-top)) {
  :root {
    /* support older iOS constant() as fallback for the env() values */
    --safe-top-const: constant(safe-area-inset-top);
  }
  .appbar {
    padding-top: var(--safe-top-const, 0px);
    top: var(--safe-top-const, 0px);
    height: calc(var(--appbar-content-height) + var(--safe-top-const, 0px));
    min-height: calc(var(--appbar-min-content-height) + var(--safe-top-const, 0px));
    max-height: calc(var(--appbar-max-content-height) + var(--safe-top-const, 0px));
  }
}

/* Sticky element positioned directly below the AppBar content area.
   This computes top as: appbar-content-height + safe-area-inset-top.
   Use this class instead of Tailwind's top-14 when you want the element
   immediately under the visible appbar regardless of device notch. */
.sticky-below-appbar {
  top: calc(var(--appbar-content-height) + env(safe-area-inset-top, 0px));
}

@supports (padding-top: constant(safe-area-inset-top)) {
  .sticky-below-appbar {
    top: calc(var(--appbar-content-height) + constant(safe-area-inset-top));
  }
}

/* FAB and content spacing helpers */
:root {
  --fab-height: 56px; /* matches h-14 */
  --fab-margin: 20px; /* visual margin from edge */
}

/* Positions the FAB above the safe-area bottom + visual margin */
.fab-safe-bottom {
  bottom: calc(var(--fab-margin) + env(safe-area-inset-bottom, 0px));
}

@supports (padding-top: constant(safe-area-inset-top)) {
  .fab-safe-bottom {
    bottom: calc(var(--fab-margin) + constant(safe-area-inset-bottom));
  }
}

/* Ensure main content has enough bottom padding so lists aren't covered by the FAB */
.content-with-fab {
  padding-bottom: calc(var(--fab-height) + var(--fab-margin) + env(safe-area-inset-bottom, 0px) + 8px);
}

@supports (padding-top: constant(safe-area-inset-top)) {
  .content-with-fab {
    padding-bottom: calc(var(--fab-height) + var(--fab-margin) + constant(safe-area-inset-bottom) + 8px);
  }
}
